#!/usr/bin/env ansible-playbook
---
# If you like to play: ./ansible/create.yml --skip-tags public_dns,letsencrypt
- hosts: all
  # connection: local
  # gather_facts true because we need the public ip address
  gather_facts: true
  become: true
  vars:
    release_url: https://mirror.openshift.com/pub/openshift-v4/amd64/clients/ocp
    release_version: 4.10.6
    # release_version: 4.9.24
    pull_secret: "{{ '~/pull-secret.txt' | expanduser }}"

  tasks:
  - name: Register system
    community.general.redhat_subscription:
      state: present
      username: bob
      password: leponge
      auto_attach: true
    when: False
    tags:
    - never
    - update-system

  - name: DNF update the system
    dnf:
      name: '*'
      state: latest
    when: ansible_facts['os_family'] == 'RedHat' and ansible_facts  ['distribution_major_version'] >= '8'
    tags:
    - never
    - update-system

  - name: Install required packages
    dnf:
      name: "{{ item }}"
      state: present
    loop:
    - libvirt
    - qemu-kvm
    - mkisofs
    - python3-devel
    - jq
    - ipmitool
    - tar
    tags:
    - never
    - update-system

  - name: Create tmp directory to store OpenShift binaries
    tempfile:
      state: directory
      suffix: "{{ release_version }}"
    register: tempdiroutput
    tags:
    - always
    - openshift-client
 
  - name: Set fact for tmp directory
    set_fact:
      tempdir: "{{ tempdiroutput.path }}"
    tags:
    - never
    - openshift-client
  
  - name: Get release image
    shell: "curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ release_version }}/release.txt | grep 'Pull From: quay.io' | awk -F ' ' '{print$3}'"
    register: release_rc
    tags:
    - never
    - openshift-client

  - name: Set fact for release image
    set_fact:
      release_image: "{{ release_rc.stdout }}"
    tags:
    - never
    - openshift-client

  - name: Get the ocp client tar gunzip file
    get_url:
      url: "{{ release_url }}/{{ release_version }}/openshift-client-linux-{{ release_version }}.tar.gz"
      dest: "{{ tempdir }}"
      mode: '0755'
    tags:
    - never
    - openshift-client
  
  - name: "Untar the openshift-client-linux-{{ release_version }}.tar.gz"
    unarchive:
      src: "{{ tempdir }}/openshift-client-linux-{{ release_version }}.tar.gz"
      dest: "{{ tempdir }}"
      mode: '0755'
      remote_src: yes
    tags:
    - never
    - openshift-client
  
  - name: Copy oc binary to /usr/local/bin
    copy:
      src: "{{ tempdir }}/{{ item }}"
      dest: /usr/local/bin/
      owner: "root"
      group: "root"
      mode: '0755'
      remote_src: yes
    become: yes
    loop:
      - kubectl
      - oc
    tags:
    - never
    - openshift-client

  - name: Extract openshift-baremetal-install
    command: "/usr/local/bin/oc adm release extract --registry-config {{ pull_secret}} --command=openshift-baremetal-install --to {{ tempdir }} {{ release_image }}"
 
  - name: Copy openshift-baremetal-install binary to /usr/local/bin
    copy:
      src: "{{ tempdir }}/{{ item }}"
      dest: /usr/local/bin/
      owner: "root"
      group: "root"
      mode: '0755'
      remote_src: yes
    become: yes
    loop:
    - openshift-baremetal-install
    tags:
    - never
    - openshift-client

  - name: Install helm
    shell: "curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash"
    args:
      creates: /usr/local/bin/helm
    tags:
    - never
    - helm

  - name: Install kustomize
    shell: "curl -s https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash"
    args:
      creates: /usr/local/bin/kustomize
    tags:
    - never
    - helm

  - name: Remove {{ tempdir }}
    file:
      name: "{{Â tempdir }}"
      state: absent
    tags:
    - always
